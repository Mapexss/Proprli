networks:
  app_network:
    driver: bridge
  sail:
    driver: bridge

volumes:
  postgres_data:
  laravel_data:
  sail-pgsql:
    driver: local

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./.docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

      - 'sail-pgsql:/var/lib/postgresql/data'
      - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 2s
    networks:
      - app_network
      - sail

  app:
    image: php:8.2
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/html/app
    develop:
      watch:
        - action: sync
          path: ./
          target: /var/www/html/app
          ignore: ['vendor', '.git', '.env', 'composer.json', 'composer.lock', 'package.json', 'package-lock.json']
        - action: rebuild
          path: composer.json
    healthcheck:
      test: ["CMD", "pgrep", "php-fpm"]
      interval: 30s
      timeout: 10s
      retries: 3
    build:
      context: .
      dockerfile: .docker/Dockerfile
    depends_on:
      - postgres
      - nginx
    ports:
      - "8000:8000"
    volumes:
      - ./:/var/www/html/app
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_server
    restart: unless-stopped
    develop:
      watch:
        - action: sync+restart
          path: ./.docker/nginx/default.conf
          target: /etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html/nginx
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app_network

  laravel.test:
    build:
      context: './vendor/laravel/sail/runtimes/8.2'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: 'sail-8.2/app'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '81:81'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      - postgres
